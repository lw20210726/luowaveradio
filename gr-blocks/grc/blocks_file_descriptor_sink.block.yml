id: blocks_file_descriptor_sink
label: 文件描述符信宿
flags: [ python, cpp ]

parameters:
-   id: fd
    label: File Descriptor
    dtype: int
-   id: type
    label: Input Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

asserts:
- ${ vlen > 0 }

templates:
    imports: from luowaveradio import blocks
    make: blocks.file_descriptor_sink(${type.size}*${vlen}, ${fd})

cpp_templates:
    includes: ['#include <luowaveradio/blocks/file_descriptor_sink.h>']
    declarations: 'blocks::file_descriptor_sink::sptr ${id};'
    make: 'this->${id} = blocks::file_descriptor_sink::make(${type.size}*${vlen}, ${fd});'
    translations:
        gr.sizeof_: 'sizeof('

file_format: 1
