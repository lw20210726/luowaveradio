id: blocks_complex_to_interleaved_short
label: 复数类型至交织短整型类型转换器
flags: [ python, cpp ]

parameters:
-   id: vector_output
    label: Vector Output
    dtype: enum
    default: 'False'
    options: ['False', 'True']
    option_labels: ['No', 'Yes']
    option_attributes:
        vlen: [1, 2]

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: short
    vlen: ${ vector_output.vlen }

templates:
    imports: from luowaveradio import blocks
    make: blocks.complex_to_interleaved_short(${vector_output})

cpp_templates:
    includes: ['#include <luowaveradio/blocks/complex_to_interleaved_short.h>']
    declarations: 'blocks::complex_to_interleaved_short::sptr ${id};'
    make: 'this->${id} = blocks::complex_to_interleaved_short::make(${vector_output});'
    translations:
        'True': 'true'
        'False': 'false'

file_format: 1
