id: analog_agc_xx
label: 自动增益控制
flags: [ python, cpp ]

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [complex, float]
    option_attributes:
        fcn: [cc, ff]
    hide: part
-   id: rate
    label: Rate
    dtype: real
    default: 1e-4
-   id: reference
    label: Reference
    dtype: real
    default: '1.0'
-   id: gain
    label: Gain
    dtype: real
    default: '1.0'
-   id: max_gain
    label: Max Gain
    dtype: real
    default: '65536'

inputs:
-   domain: stream
    dtype: ${ type }

outputs:
-   domain: stream
    dtype: ${ type }

templates:
    imports: from luowaveradio import analog
    make: |-
        analog.agc_${type.fcn}(${rate}, ${reference}, ${gain})
        self.${id}.set_max_gain(${max_gain})
    callbacks:
    - set_rate(${rate})
    - set_reference(${reference})
    - set_gain(${gain})
    - set_max_gain(${max_gain})

cpp_templates:
    includes: ['#include <luowaveradio/analog/agc_${type.fcn}.h>']
    declarations: 'analog::agc_${type.fcn}::sptr ${id};'
    make: |-
        this->${id} = analog::agc_${type.fcn}::make(${rate}, ${reference}, ${gain});
        this->${id}->set_max_gain(${max_gain});
    callbacks:
    - set_rate(${rate})
    - set_reference(${reference})
    - set_gain(${gain})
    - set_max_gain(${max_gain})
    link: ['luowaveradio-analog']

file_format: 1
